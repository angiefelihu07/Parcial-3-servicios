Clonacion repositorio
git clone  https://github.com/omondragon/APIRestFlaskMySQLUbuntu 
Levante y aprovisione la maquina: vagrant up
Iniciar sesión SSH en el servidor: vagrant ssh servidorRest
Ejecutar el Código
export FLASK_APP=apirest_mysql.py
python3 -m flask run --host=0.0.0.0

2. creacion carpeta frontend
touch index.html
 cuerpo:
index.html 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Libros App</title>
  <!-- Agrega enlaces a Bootstrap y jQuery -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-Pzjw8L+1fHwAId8H8IaPzgXNgpamoFVy38MVBnE4z5QbIlsD04OX+VZBhKkq5fF" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
  <!-- Agrega tu propio CSS si es necesario -->
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    button {
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 class="my-4">Libros App</h1>

    <!-- Sección para obtener todos los libros -->
    <div class="my-4">
      <h2>Obtener Todos los Libros</h2>
      <button class="btn btn-primary" onclick="getBooks()">Obtener Libros</button>
      <ul id="bookList" class="list-group mt-3"></ul>
    </div>

    <!-- Sección para agregar un nuevo libro -->
    <div class="my-4">
      <h2>Agregar Nuevo Libro</h2>
      <form id="addBookForm">
        <div class="form-group">
          <label for="title">Título</label>
          <input type="text" class="form-control" id="title" placeholder="Título" required>
        </div>
        <div class="form-group">
          <label for="description">Descripción</label>
          <input type="text" class="form-control" id="description" placeholder="Descripción" required>
        </div>
        <div class="form-group">
          <label for="author">Autor</label>
          <input type="text" class="form-control" id="author" placeholder="Autor" required>
        </div>
        <button type="submit" class="btn btn-success">Agregar Libro</button>
      </form>
    </div>
  </div>

  <!-- Agrega tu propio script JavaScript -->
  <script>
    // Función para obtener todos los libros
    function getBooks() {
      fetch('http://localhost:5000/books')
        .then(response => response.json())
        .then(data => showBookList(data.libros))
        .catch(error => console.error('Error:', error));
    }

    // Función para agregar un nuevo libro
    $('#addBookForm').submit(function(event) {
      event.preventDefault();
      const title = $('#title').val();
      const description = $('#description').val();
      const author = $('#author').val();

      fetch('http://localhost:5000/books', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          title: title,
          description: description,
          author: author,
        }),
      })
        .then(response => response.json())
        .then(data => {
          console.log('Libro agregado:', data.libro);
          getBooks(); // Actualizar la lista después de agregar un libro
        })
        .catch(error => console.error('Error:', error));
    });

    // Función para eliminar un libro
    function deleteBook
-- instalacion npm para ejecutarlo
--http server